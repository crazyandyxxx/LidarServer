var startTime,endTime,linePRA=[],linePRB=[],timeat=[],height=[],lineA=[],lineB=[],lineExt=[],lineDep=[],linePbl=[],lineAOD=[],linePM10=[],linePM25=[],AMin=0,AMax=1e4,BMin=0,BMax=1e4,lineIndex=0,drawDataA={},drawDataB={},drawNameA="平行通道距离校正信号",drawNameB="垂直通道距离校正信号",res=15,layoutA={xaxis:{title:"时间",showline:!0,tickmode:"auto",range:[],showspikes:!0,spikemode:"across"},yaxis:{title:"距离(km)",showline:!0,range:[0,3]},margin:{t:60}},layoutB={xaxis:{title:"时间",showline:!0,tickmode:"auto",tickformat:"%H:%M \n %Y/%m/%d",range:[],showspikes:!0,spikemode:"across"},yaxis:{title:"距离(km)",showline:!0,range:[0,3]},margin:{t:60}},layoutLineA={xaxis:{title:"强度",showline:!0,tickmode:"auto",showexponent:"last",exponentformat:"power"},yaxis:{showline:!0,range:[0,3],ticks:"outside"},annotations:[{showarrow:!1,text:"",font:{color:"black"},xref:"paper",yref:"paper",x:.5,y:.5}],margin:{t:60}},layoutLineB={xaxis:{title:"强度",showline:!0,tickmode:"auto",showexponent:"last",exponentformat:"power"},yaxis:{showline:!0,range:[0,3],ticks:"outside"},annotations:[{showarrow:!1,text:"",font:{color:"black"},xref:"paper",yref:"paper",x:.5,y:.5}],margin:{t:60}},layoutConfig={displayModeBar:!1,responsive:!0},plotA=document.getElementById("PRADiv"),plotB=document.getElementById("PRBDiv"),PRA_data={},PRB_data={},traceA={},traceB={},tracePblA={},tracePblB={},rc=15e3,sa=40,snrT=2,pblT=.5;function ReCalculation(){$("#calcModal").modal("hide"),rc=$("#rc").val(),sa=$("#sa").val(),snrT=$("#snrT").val(),pblT=$("#pblT").val(),$.ajax({type:"post",data:{"task id":task_id,content:"view","time start":startTime,"time end":endTime,"calc param":`{"rc": ${rc}, "sa": ${sa}, "snrT": ${snrT}, "pblT": ${pblT} }`},url:urlGetLosData,beforeSend:function(){$("#myLoading").modal("show")},success:function(e){$("#myLoading").modal("hide"),prepareData(e),lineIndex=0,plotA.removeListener("plotly_hover",plotHover);var a={"xaxis.range[0]":timeat[0],"xaxis.range[1]":timeat[timeat.length-1]};Plotly.relayout("PRADiv",a),Plotly.relayout("PRBDiv",a),tracePblA.x=timeat,tracePblB.x=timeat,SelectChannelA(),SelectChannelB(),plotA.on("plotly_hover",plotHover)}})}function prepareData(e){linePRA=[],linePRB=[],timeat=[],height=[],lineA=[],lineB=[],lineExt=[],lineDep=[],linePbl=[],lineAOD=[],linePM10=[],linePM25=[],res=e.result[0].resolution/1e3;let a=e.result[0].raw_A.length;for(let e=0;e<a;e++)height.push((e+1)*res);for(let a=0;a<e.result.length;a++){timeat.push(e.result[a].timestamp),lineA.push(e.result[a].raw_A),lineB.push(e.result[a].raw_B),linePRA.push(e.result[a].prr_A),linePRB.push(e.result[a].prr_B),lineExt.push(e.result[a].ext),lineDep.push(e.result[a].dep),linePbl.push(e.result[a].pbl/1e3);let t=e.result[a].ext.slice(0,Math.round(3/res)).reduce((e,a)=>e+a)*res;lineAOD.push(t>15?15:t),linePM10.push(e.result[a].ext.map(e=>e>0?243*Math.pow(e,1.13):0)),linePM25.push(e.result[a].ext.map(e=>e>0?121.5*Math.pow(e,1.13):0))}}function setDateRange(e,a){$("#dateRange").daterangepicker({timePicker:!0,timePicker24Hour:!0,timePickerSeconds:!0,startDate:e,endDate:a,minDate:e,maxDate:a,locale:{format:"YYYY/MM/DD HH:mm:ss",applyLabel:"确定",cancelLabel:"取消",fromLabel:"从",toLabel:"至",customRangeLabel:"Custom",weekLabel:"周",daysOfWeek:["日","一","二","三","四","五","六"],monthNames:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],firstDay:1}},(function(e,a){startTime=e.format("YYYY-MM-DD HH:mm:ss"),endTime=a.format("YYYY-MM-DD HH:mm:ss")}))}function addEvents(){document.getElementById("channelA").addEventListener("change",SelectChannelA),document.getElementById("zMinA").addEventListener("change",ChangeChannelARangeMin),document.getElementById("zMaxA").addEventListener("change",ChangeChannelARangeMax),document.getElementById("colorMinA").addEventListener("change",ChangeChannelAMin),document.getElementById("colorMaxA").addEventListener("change",ChangeChannelAMax),document.getElementById("channelB").addEventListener("change",SelectChannelB),document.getElementById("zMinB").addEventListener("change",ChangeChannelBRangeMin),document.getElementById("zMaxB").addEventListener("change",ChangeChannelBRangeMax),document.getElementById("colorMinB").addEventListener("change",ChangeChannelBMin),document.getElementById("colorMaxB").addEventListener("change",ChangeChannelBMax),document.getElementById("realTime").addEventListener("click",getRealTimeData),document.getElementById("reCalc").addEventListener("click",ReCalculation),document.getElementById("savePicA").addEventListener("click",SaveHeatA),document.getElementById("saveLineA").addEventListener("click",SaveLineA),document.getElementById("savePicB").addEventListener("click",SaveHeatB),document.getElementById("saveLineB").addEventListener("click",SaveLineB)}function getRealTimeData(){document.getElementById("realTime").checked&&$.post(urlGetLosData,{"task id":task_id,content:"view","calc param":`{"rc": ${rc}, "sa": ${sa}, "snrT": ${snrT}, "pblT": ${pblT} }`},(function(e,a){if("success"==a){prepareData(e),lineIndex=e.result.length-1,layoutLineA.annotations[0].text=timeat[lineIndex],layoutLineB.annotations[0].text=timeat[lineIndex],setDateRange(e.result[0].timestamp,e.result[e.result.length-1].timestamp),plotA.removeListener("plotly_hover",plotHover);var t={"xaxis.range[0]":timeat[0],"xaxis.range[1]":timeat[timeat.length-1]};Plotly.relayout("PRADiv",t),Plotly.relayout("PRBDiv",t),tracePblA.x=timeat,tracePblB.x=timeat,SelectChannelA(),SelectChannelB(),plotA.on("plotly_hover",plotHover),setTimeout(getRealTimeData,1e4)}}))}function plotHover(e){var a="";for(let t=0;t<e.points.length;t++)"heatmap"===e.points[t].fullData.type&&(a=e.points[t].pointNumber);lineIndex=a[1],traceA.x=drawDataA[lineIndex].slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),traceA.y=height.slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),traceB.x=drawDataB[lineIndex].slice(layoutLineB.yaxis.range[0]/res,layoutLineB.yaxis.range[1]/res),traceB.y=height.slice(layoutLineB.yaxis.range[0]/res,layoutLineB.yaxis.range[1]/res),layoutLineA.annotations[0].text=timeat[lineIndex],layoutLineB.annotations[0].text=timeat[lineIndex],Plotly.react("lineADiv",[traceA],layoutLineA),Plotly.react("lineBDiv",[traceB],layoutLineB)}function createColorScale(e){var a=[];for(let l=0;l<e;l++){var t=getColor(l/(e-1),0,1,1),n="rgb("+Math.floor(255*t.r)+","+Math.floor(255*t.g)+","+Math.floor(255*t.b)+")";a.push([l/(e-1),n])}return a}function getColor(e,a,t,n){var l={};e<a&&(e=a),e>t&&(e=t);var i=t-a;if(l.a=n-.1+.2*(e-a)/i,e<a+.25*i){var r=4*(e-a)/i;l.r=0,l.g=r,l.b=1}else if(e<a+.5*i){var o=1+4*(a+.25*i-e)/i;l.r=0,l.g=1,l.b=o}else if(e<a+.75*i){var s=4*(e-a-.5*i)/i;l.r=s,l.g=1,l.b=0}else{r=1+4*(a+.75*i-e)/i;l.r=1,l.g=r,l.b=0}return l}function SelectChannelA(){var e=document.getElementById("channelA");switch(tracePblA.visible=!1,drawNameA=e.options[e.selectedIndex].text){case"平行通道距离校正信号":drawDataA=linePRA;break;case"垂直通道距离校正信号":drawDataA=linePRB;break;case"消光系数":drawDataA=lineExt;break;case"退偏比":drawDataA=lineDep;break;case"平行通道原始信号":drawDataA=lineA;break;case"垂直通道原始信号":drawDataA=lineB;break;case"PM10":drawDataA=linePM10;break;case"PM2.5":drawDataA=linePM25;break;case"污染边界层":drawDataA=lineExt,tracePblA.y=linePbl,tracePblA.visible=!0;break;case"气溶胶光学厚度":drawDataA=lineExt,tracePblA.y=lineAOD,tracePblA.visible=!0}PRA_data.x=timeat,PRA_data.z=drawDataA,traceA.x=drawDataA[lineIndex].slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),Plotly.react("PRADiv",[PRA_data,tracePblA],layoutA),Plotly.react("lineADiv",[traceA],layoutLineA)}function ChangeChannelAMax(){var e=document.getElementById("colorMaxA"),a={zmax:AMax=e.value};PRA_data.zmax=AMax,Plotly.restyle("PRADiv",a)}function ChangeChannelAMin(){var e=document.getElementById("colorMinA"),a={zmin:AMin=e.value};PRA_data.zmin=AMin,Plotly.restyle("PRADiv",a)}function ChangeChannelARangeMax(){var e=document.getElementById("zMaxA");layoutA.yaxis.range[1]=e.value/1e3,layoutLineA.yaxis.range[1]=e.value/1e3;var a={"yaxis.range[1]":e.value/1e3};Plotly.relayout("PRADiv",a),traceA.x=drawDataA[lineIndex].slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),traceA.y=height.slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),Plotly.react("lineADiv",[traceA],layoutLineA)}function ChangeChannelARangeMin(){var e=document.getElementById("zMinA");layoutA.yaxis.range[0]=e.value/1e3,layoutLineA.yaxis.range[0]=e.value/1e3;var a={"yaxis.range[0]":e.value/1e3};Plotly.relayout("PRADiv",a),traceA.x=drawDataA[lineIndex].slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),traceA.y=height.slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),Plotly.react("lineADiv",[traceA],layoutLineA)}function SaveHeatA(){Plotly.downloadImage("PRADiv",{format:"png",width:1e3,height:500,filename:"定点扫描_"+drawNameA+"从"+timeat[0]+"至"+timeat[timeat.length-1]})}function SaveLineA(){let e="";e+="Data Length,"+drawDataA[lineIndex].length+"\r\n",e+="Resolution,"+1e3*res+"\r\n",e+=drawDataA[lineIndex].join(",")+"\r\n";var a=new Blob([e],{type:"text/csv;charset=utf-8;"});if(navigator.msSaveBlob)navigator.msSaveBlob(a,drawNameA+"_"+timeat[lineIndex]+".csv");else{var t=document.createElement("a");if(void 0!==t.download){var n=URL.createObjectURL(a);t.setAttribute("href",n),t.setAttribute("download","定点扫描_"+drawNameA+timeat[lineIndex]+".csv"),t.style.visibility="hidden",document.body.appendChild(t),t.click(),document.body.removeChild(t)}}}function SelectChannelB(){var e=document.getElementById("channelB");switch(tracePblB.visible=!1,drawNameB=e.options[e.selectedIndex].text){case"平行通道距离校正信号":drawDataB=linePRA;break;case"垂直通道距离校正信号":drawDataB=linePRB;break;case"消光系数":drawDataB=lineExt;break;case"退偏比":drawDataB=lineDep;break;case"平行通道原始信号":drawDataB=lineA;break;case"垂直通道原始信号":drawDataB=lineB;break;case"PM10":drawDataB=linePM10;break;case"PM2.5":drawDataB=linePM25;break;case"污染边界层":drawDataB=lineExt,tracePblB.y=linePbl,tracePblB.visible=!0;break;case"气溶胶光学厚度":drawDataB=lineExt,tracePblB.y=lineAOD,tracePblB.visible=!0}PRB_data.x=timeat,PRB_data.z=drawDataB,traceB.x=drawDataB[lineIndex].slice(layoutLineB.yaxis.range[0]/res,layoutLineB.yaxis.range[1]/res),Plotly.react("PRBDiv",[PRB_data,tracePblB],layoutB),Plotly.react("lineBDiv",[traceB],layoutLineB)}function ChangeChannelBMax(){var e=document.getElementById("colorMaxB"),a={zmax:BMax=e.value};PRB_data.zmax=BMax,Plotly.restyle("PRBDiv",a)}function ChangeChannelBMin(){var e=document.getElementById("colorMinB"),a={zmin:BMin=e.value};PRB_data.zmin=BMin,Plotly.restyle("PRBDiv",a)}function ChangeChannelBRangeMax(){var e=document.getElementById("zMaxB");layoutB.yaxis.range[1]=e.value/1e3,layoutLineB.yaxis.range[1]=e.value/1e3;var a={"yaxis.range[1]":e.value/1e3};Plotly.relayout("PRBDiv",a),traceB.x=drawDataB[lineIndex].slice(layoutLineB.yaxis.range[0]/res,layoutLineB.yaxis.range[1]/res),traceB.y=height.slice(layoutLineB.yaxis.range[0]/res,layoutLineB.yaxis.range[1]/res),Plotly.react("lineBDiv",[traceB],layoutLineB)}function ChangeChannelBRangeMin(){var e=document.getElementById("zMinB");layoutB.yaxis.range[0]=e.value/1e3,layoutLineB.yaxis.range[0]=e.value/1e3;var a={"yaxis.range[0]":e.value/1e3};Plotly.relayout("PRBDiv",a),traceB.x=drawDataB[lineIndex].slice(layoutLineB.yaxis.range[0]/res,layoutLineB.yaxis.range[1]/res),traceB.y=height.slice(layoutLineB.yaxis.range[0]/res,layoutLineB.yaxis.range[1]/res),Plotly.react("lineBDiv",[traceB],layoutLineB)}function SaveHeatB(){Plotly.downloadImage("PRBDiv",{format:"png",width:1e3,height:500,filename:"定点扫描_"+drawNameB+"从"+timeat[0]+"至"+timeat[timeat.length-1]})}function SaveLineB(){let e="";e+="Data Length,"+drawDataB[lineIndex].length+"\r\n",e+="Resolution,"+1e3*res+"\r\n",e+=drawDataB[lineIndex].join(",")+"\r\n";var a=new Blob([e],{type:"text/csv;charset=utf-8;"});if(navigator.msSaveBlob)navigator.msSaveBlob(a,drawNameB+timeat[lineIndex]+".csv");else{var t=document.createElement("a");if(void 0!==t.download){var n=URL.createObjectURL(a);t.setAttribute("href",n),t.setAttribute("download","定点扫描_"+drawNameB+"_"+timeat[lineIndex]+".csv"),t.style.visibility="hidden",document.body.appendChild(t),t.click(),document.body.removeChild(t)}}}$((function(){$('[data-toggle="tooltip"]').tooltip()})),$.ajax({type:"post",data:{"task id":task_id,content:"view","calc param":`{"rc": ${rc}, "sa": ${sa}, "snrT": ${snrT}, "pblT": ${pblT} }`},url:urlGetLosData,beforeSend:function(){$("#myLoading").modal("show")},success:function(e){$("#myLoading").modal("hide"),addEvents(),prepareData(e),startTime=e.result[0].timestamp,endTime=e.result[e.result.length-1].timestamp,setDateRange(startTime,endTime),drawDataA=linePRA,PRA_data={z:linePRA,x:timeat,y:height,zmin:0,zmax:1e4,type:"heatmap",transpose:!0,colorscale:createColorScale(11),colorbar:{thickness:15,xpad:5,showexponent:"last",exponentformat:"power"}},drawDataB=linePRB,PRB_data={z:linePRB,x:timeat,y:height,zmin:0,zmax:1e4,type:"heatmap",transpose:!0,colorscale:createColorScale(11),colorbar:{thickness:15,xpad:5,showexponent:"last",exponentformat:"power"}},traceA={x:linePRA[0].slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),y:height,mode:"lines",line:{color:"black",width:2}},traceB={x:linePRB[0].slice(layoutLineA.yaxis.range[0]/res,layoutLineA.yaxis.range[1]/res),y:height,mode:"lines",line:{color:"black",width:2}},tracePblA={x:timeat,y:linePbl,mode:"markers",type:"scatter",marker:{color:"black"},showlegend:!1,visible:!1},tracePblB={x:timeat,y:linePbl,mode:"markers",type:"scatter",marker:{color:"black"},showlegend:!1,visible:!1},layoutA.xaxis.range=[timeat[0],timeat[timeat.length-1]],layoutB.xaxis.range=[timeat[0],timeat[timeat.length-1]],layoutLineA.annotations[0].text=timeat[lineIndex],layoutLineB.annotations[0].text=timeat[lineIndex],Plotly.newPlot("PRADiv",[PRA_data,tracePblA],layoutA,layoutConfig),Plotly.newPlot("PRBDiv",[PRB_data,tracePblB],layoutB,layoutConfig),Plotly.newPlot("lineADiv",[traceA],layoutLineA,layoutConfig),Plotly.newPlot("lineBDiv",[traceB],layoutLineB,layoutConfig),plotA.on("plotly_hover",plotHover),plotB.on("plotly_hover",plotHover)}});
